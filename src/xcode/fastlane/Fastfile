# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# A list of supported languages

ENV["LC_ALL"] = "nl_BE"
ENV["LANG"] = "nl_BE"

default_platform(:ios)

platform :ios do

  before_all do
    setup_circle_ci
  end

  desc "Update license file"
  lane :update_licenses do
    update_third_party_notice()
  end

  desc "Build project"
  lane :build do
    build_ios_app(
      skip_codesigning: true,
      export_method: "ad-hoc",
      skip_package_ipa: true,
      destination: "platform=iOS Simulator,OS=13.6,name=iPhone 11",
      scheme: "ENA"
    )
  end

  desc "Build project (Community)"
  lane :build_community do
    build_ios_app(
      skip_codesigning: true,
      export_method: "ad-hoc",
      skip_package_ipa: true,
      destination: "platform=iOS Simulator,OS=13.6,name=iPhone 11",
      scheme: "ENACommunity"
    )
  end
  
  desc "Lint"
  lane :lint do
    swiftlint(
      mode: :lint,
      output_file: "swiftlint.result.json",
      config_file: "ENA/.swiftlint.yml",
      raise_if_swiftlint_error: true
    )
  end
  
  desc "Run tests"
  lane :test do
    # UI Tests
    run_tests(
      scheme: "ENAUITests",
      devices: ["iPhone 11"]
    )

    # Unit Tests
    run_tests(
      scheme: "ENATests",
      devices: ["iPhone 11"]
    )

    swiftlint(
      mode: :lint,
      output_file: "swiftlint.result.json",
      config_file: "ENA/.swiftlint.yml",
      raise_if_swiftlint_error: true,
      reporter: "sonarqube"
    )

    # Gather code coverage
    xcov(
      workspace: "ENA.xcworkspace",
      scheme: "ENATests",
      markdown_report: true,
      html_report: false,
      output_directory: "fastlane/test_output"
    )
  end

  desc "Build and upload for testing"
  lane :betaRelease do
    match(
      type:"appstore",
      readonly: true
    )
    
    increment_build_number(
      xcodeproj: "ENA/ENA.xcodeproj"
    )

    update_info_plist( 
      xcodeproj: "ENA/ENA.xcodeproj",
      plist_path: "ENA/Resources/Info.plist",
      block: proc do |plist|
        plist["BEEnvironment"] = "staging"
      end
    )

    build_ios_app(
      scheme: "ENA",
      configuration: "Release",
      clean: true,
      xcargs: "OTHER_SWIFT_FLAGS='$(inherited) -D DEVELOPER_MENU'"
    )
    
    upload_to_testflight(
      username: "technical@devside.com",
      apple_id:"1526431891",
      skip_waiting_for_build_processing: true,
      skip_submission: true  # only upload
    )
    
    update_info_plist( 
      xcodeproj: "ENA/ENA.xcodeproj",
      plist_path: "ENA/Resources/Info.plist",
      block: proc do |plist|
        plist["BEEnvironment"] = "test"
      end
    )
    
    commit_version_bump(
      message:"[skip ci] version bump",
      xcodeproj: "ENA/ENA.xcodeproj"
    )
    
    add_git_tag

    push_to_git_remote
    
    create_pull_request(
      repo: "covid-be-app/cwa-app-ios",
      title: "Version Bump",
      base: "develop", # optional, defaults to "master"
    )
  end
  
  lane :screenshots do
    capture_screenshots(
      output_directory: "./screenshots_dark",
      dark_mode: true 
    )

    capture_screenshots(
      output_directory: "./screenshots_light"
    )
  end

  desc "Build and upload for App Store"
  lane :productionRelease do
    match(
      type:"appstore",
      readonly: true
    )
    
    increment_build_number(
      xcodeproj: "ENA/ENA.xcodeproj"
    )

    update_info_plist( 
      xcodeproj: "ENA/ENA.xcodeproj",
      plist_path: "ENA/Resources/Info.plist",
      block: proc do |plist|
        plist["BEEnvironment"] = "production"
      end
    )

    build_ios_app(
      scheme: "ENA",
      configuration: "Release",
      clean: true
    )
    
    upload_to_testflight(
      username: "technical@devside.com",
      apple_id:"1526431891",
      skip_waiting_for_build_processing: true,
      skip_submission: true  # only upload
    )

    update_info_plist( 
      xcodeproj: "ENA/ENA.xcodeproj",
      plist_path: "ENA/Resources/Info.plist",
      block: proc do |plist|
        plist["BEEnvironment"] = "test"
      end
    )
    
    commit_version_bump(
      message:"[skip ci] version bump",
      xcodeproj: "ENA/ENA.xcodeproj"
    )
    
    add_git_tag(
      grouping: "releases"
    )

    push_to_git_remote
    
    create_pull_request(
      repo: "covid-be-app/cwa-app-ios",
      title: "Version Bump",
      base: "develop",
    )
  end
end
